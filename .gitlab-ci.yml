stages:
  - connect_vpn
  - build
  - test
  - deploy

variables:
  VPN_SERVER_ADDRESS: ${VPN_SERVER_ADDRESS}
  VPN_USERNAME: ${VPN_USERNAME}
  VPN_PASSWORD: ${VPN_PASSWORD}
  SERVER_IP: ${SERVER_IP}
  SSH_PORT: ${SSH_PORT}
  SSH_USERNAME: ${SSH_USERNAME}
  SSH_PASSWORD: ${SSH_PASSWORD}
  SSH_PRIVATE_KEY: ${SSH_PRIVATE_KEY}

before_script:
  - apk update
  - apk add openconnect openssh-client

connect_vpn:
  stage: connect_vpn
  image: alpine:latest
  script:
    - echo "${VPN_PASSWORD}" | openconnect --user="${VPN_USERNAME}" --passwd-on-stdin "${VPN_SERVER_ADDRESS}" --no-cert-check
  only:
    - staging
    - tags

build:
  stage: build
  image: node:lts
  script:
    - npm ci
  only:
    - staging
    - tags

test:
  stage: test
  image: php:8.1
  script:
    - composer install --no-interaction --prefer-dist --optimize-autoloader
    - ./vendor/bin/phpunit
  only:
    - staging
    - tags

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk update
    - apk add openssh-client
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "${SSH_PRIVATE_KEY}" > "${SSH_PRIVATE_KEY}"
    - chmod 600 "${SSH_PRIVATE_KEY}"
  script:
    - echo "${VPN_PASSWORD}" | openconnect --user="${VPN_USERNAME}" --passwd-on-stdin "${VPN_SERVER_ADDRESS}"
    - ssh-keyscan -p "${SSH_PORT}" -t rsa "${SERVER_IP}" >> ~/.ssh/known_hosts
    - ssh -f -N -L ${SERVER_IP}:${SSH_PORT}:"${SERVER_IP}":"${SSH_PORT}" -i "${SSH_PRIVATE_KEY}" "${SSH_USERNAME}@${SERVER_IP}"
    - ssh -p ${SSH_PORT} -i "${SSH_PRIVATE_KEY}" "${SSH_USERNAME}@${SERVER_IP}" "cd /var/www/html/ && git pull origin staging"
    - ssh -p ${SSH_PORT} -i "${SSH_PRIVATE_KEY}" "${SSH_USERNAME}@${SERVER_IP}" "cd /var/www/html/ && echo \"$ENV_CREDENTIALS\" > .env"
    - ssh -p ${SSH_PORT} -i "${SSH_PRIVATE_KEY}" "${SSH_USERNAME}@${SERVER_IP}" "cd /var/www/html/ && composer install --no-interaction --prefer-dist --optimize-autoloader"
    - ssh -p ${SSH_PORT} -i "${SSH_PRIVATE_KEY}" "${SSH_USERNAME}@${SERVER_IP}" "cd /var/www/html/ && php artisan migrate --force"
    - ssh -p ${SSH_PORT} -i "${SSH_PRIVATE_KEY}" "${SSH_USERNAME}@${SERVER_IP}" "cd /var/www/html/ && php artisan optimize"
    - ssh -p ${SSH_PORT} -i "${SSH_PRIVATE_KEY}" "${SSH_USERNAME}@${SERVER_IP}" "cd /var/www/html/ && npm install"
    - ssh -p ${SSH_PORT} -i "${SSH_PRIVATE_KEY}" "${SSH_USERNAME}@${SERVER_IP}" "cd /var/www/html/ && npm run build"
  only:
    - staging
    - tags

after_script:
  - |
    if [ "$CI_COMMIT_REF_NAME" == "staging" ] && [ "$CI_PIPELINE_SOURCE" == "push" ] && [ "$CI_COMMIT_TAG" == "" ]; then
      ssh -p ${SSH_PORT} -i "${SSH_PRIVATE_KEY}" "${SSH_USERNAME}@${SERVER_IP}" "cd /var/www/html/ && git checkout HEAD^"
      ssh -p ${SSH_PORT} -i "${SSH_PRIVATE_KEY}" "${SSH_USERNAME}@${SERVER_IP}" "cd /var/www/html/ && php artisan migrate:rollback --step=1"
    fi
